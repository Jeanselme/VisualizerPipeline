{
    "id": "04c38292-cb75-4649-acac-7b395377e243",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2020-01-15T23:31:20.206817Z",
    "inputs": [
        {
            "name": "dataset inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.20.produce",
            "name": "output predictions"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "fe0f1ac8-1d39-463a-b344-7bd498a31b91",
                "version": "0.1",
                "python_path": "d3m.primitives.data_augmentation.datamart_augmentation.Common",
                "name": "Perform dataset augmentation using Datamart",
                "digest": "a2b54ea92e562ec4d9dc4bd7cedee574dbbb7796d255bfc609910fead4216f82"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "system_identifier": {
                    "type": "VALUE",
                    "data": "NYU"
                },
                "search_result": {
                    "type": "VALUE",
                    "data": "{\"augmentation\": {\"left_columns\": [[1]], \"left_columns_names\": [[\"tpep_pickup_datetime\"]], \"right_columns\": [[0]], \"right_columns_names\": [[\"Quarter End Date\"]], \"type\": \"join\"}, \"d3m_dataset_description\": {\"about\": {\"approximateSize\": \"5371 B\", \"datasetID\": \"datamart.socrata.data-ny-gov.bkzt-72yv\", \"datasetName\": \"New York State RGGI Funds\", \"datasetSchemaVersion\": \"4.0.0\", \"datasetVersion\": \"1.0\", \"description\": \"How does your organization use this dataset? What other NYSERDA or energy-related datasets would ...\", \"license\": \"unknown\", \"redacted\": false}, \"dataResources\": [{\"columns\": [{\"colIndex\": 0, \"colName\": \"Quarter End Date\", \"colType\": \"dateTime\", \"role\": [\"attribute\"]}, {\"colIndex\": 1, \"colName\": \"Quarter\", \"colType\": \"string\", \"role\": [\"attribute\"]}, {\"colIndex\": 2, \"colName\": \"Fund Category\", \"colType\": \"string\", \"role\": [\"attribute\"]}, {\"colIndex\": 3, \"colName\": \"Cumulative Funds ($)\", \"colType\": \"integer\", \"role\": [\"attribute\"]}], \"isCollection\": false, \"resFormat\": {\"text/csv\": [\"csv\"]}, \"resID\": \"learningData\", \"resPath\": \"tables/learningData.csv\", \"resType\": \"table\"}]}, \"id\": \"datamart.socrata.data-ny-gov.bkzt-72yv\", \"metadata\": {\"columns\": [{\"coverage\": [{\"range\": {\"gte\": 1380499200.0, \"lte\": 1459382400.0}}, {\"range\": {\"gte\": 1467244800.0, \"lte\": 1546214400.0}}, {\"range\": {\"gte\": 1285804800.0, \"lte\": 1372550400.0}}], \"mean\": 1421170301.1235955, \"name\": \"Quarter End Date\", \"semantic_types\": [\"http://schema.org/DateTime\"], \"stddev\": 72599253.27341314, \"structural_type\": \"http://schema.org/Text\"}, {\"name\": \"Quarter\", \"num_distinct_values\": 4, \"semantic_types\": [\"http://schema.org/Enumeration\"], \"structural_type\": \"http://schema.org/Text\"}, {\"name\": \"Fund Category\", \"num_distinct_values\": 3, \"semantic_types\": [\"http://schema.org/Enumeration\"], \"structural_type\": \"http://schema.org/Text\"}, {\"coverage\": [{\"range\": {\"gte\": 770000.0, \"lte\": 13151561.0}}, {\"range\": {\"gte\": 728232767.0, \"lte\": 1184631180.0}}, {\"range\": {\"gte\": 265358611.0, \"lte\": 690860405.0}}], \"mean\": 249531576.73033708, \"name\": \"Cumulative Funds ($)\", \"semantic_types\": [\"https://metadata.datadrivendiscovery.org/types/PhoneNumber\"], \"stddev\": 372508925.339027, \"structural_type\": \"http://schema.org/Integer\"}], \"date\": \"2019-12-03T02:14:27.524379Z\", \"description\": \"How does your organization use this dataset? What other NYSERDA or energy-related datasets would ...\", \"materialize\": {\"date\": \"2019-12-02T15:50:07.703874Z\", \"direct_url\": \"https://data.ny.gov/api/views/bkzt-72yv/rows.csv?accessType=DOWNLOAD\", \"identifier\": \"datamart.socrata\", \"socrata_domain\": \"data.ny.gov\", \"socrata_id\": \"bkzt-72yv\", \"socrata_updated\": \"2019-11-15T22:41:39.000Z\"}, \"name\": \"New York State RGGI Funds\", \"nb_rows\": 89, \"sample\": \"Quarter End Date,Quarter,Fund Category,Cumulative Funds ($)\\n03/31/2011,Qrt 1,RGGI Auction Proceeds,312344851\\n06/30/2011,Qrt 2,Interest Allocated to the RGGI Portfolio,1034063\\n12/31/2011,Qrt 4,RGGI Auction Proceeds,344879060\\n06/30/2012,Qrt 2,Interest Allocated to the RGGI Portfolio,1998557\\n03/31/2014,Qrt 1,Interest Allocated to the GJGNY Program,770000\\n03/31/2014,Qrt 1,RGGI Auction Proceeds,619845745\\n06/30/2014,Qrt 2,Interest Allocated to the GJGNY Program,770000\\n06/30/2014,Qrt 2,RGGI Auction Proceeds,655855199\\n09/30/2014,Qrt 3,Interest Allocated to the RGGI Portfolio,4400174\\n09/30/2015,Qrt 3,Interest Allocated to the RGGI Portfolio,5900174\\n09/30/2015,Qrt 3,RGGI Auction Proceeds,851666430\\n12/31/2015,Qrt 4,Interest Allocated to the RGGI Portfolio,5900174\\n12/31/2016,Qrt 4,Interest Allocated to the GJGNY Program,1930606\\n12/31/2016,Qrt 4,RGGI Auction Proceeds,997676720\\n03/31/2017,Qrt 1,Interest Allocated to the RGGI Portfolio,12947487\\n06/30/2017,Qrt 2,Interest Allocated to the RGGI Portfolio,13151561\\n06/30/2017,Qrt 2,RGGI Auction Proceeds,1043395845\\n12/31/2017,Qrt 4,Interest Allocated to the RGGI Portfolio,13151561\\n03/31/2018,Qrt 1,RGGI Auction Proceeds,1093487106\\n06/30/2018,Qrt 2,Interest Allocated to the GJGNY Program,2243078\\n\", \"size\": 5371, \"version\": \"v0.5.1-130-gfd72bef\"}, \"score\": 20.0, \"supplied_id\": null, \"supplied_resource_id\": null}"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "fe0f1ac8-1d39-463a-b344-7bd498a31b92",
                "version": "0.1",
                "python_path": "d3m.primitives.data_cleaning.clean_augmentation.AutonBox",
                "name": "Clean dataset of unaugmented rows",
                "digest": "a93d8ed883f147c3bea21b6677c174e846ea11a3562fafc1515d1fb25d3fe476"
            },
            "hyperparams": {
                "original_columns": {
                    "type": "VALUE",
                    "data": ["tpep_pickup_datetime", "num_pickups"]
                },
                "percentage_missing": {
                    "type": "VALUE",
                    "data": 0.8
                }
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },  
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_transformation.denormalize.Common",
                "name": "Denormalize datasets",
                "digest": "0d5c62917bbfd451ad277226c850b58086ba45fb3a3159dcdfe47cb299ebf2dc"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset",
                "digest": "b1ac4776f0e916f707a6b6a74f3a36c56ea2eb37c6a255d986faf21855446073"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "name": "Extracts columns by semantic type",
                "digest": "f828f4fbd3ce894ef26a264e53ac98c79d689b653b0eda497b069e42ddfebef4"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "semantic_types": {
                    "type": "VALUE",
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ]
                },
                "exclude_columns": {
                    "type": "VALUE",
                    "data": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "version": "0.6.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.Common",
                "name": "Parses strings into their types",
                "digest": "631c29b4a7853a396053e6226a230d4efe0926ccc6e73417b886ca9a62c469ef"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "exclude_columns": {
                    "type": "VALUE",
                    "data": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "name": "Extracts columns by semantic type",
                "digest": "f828f4fbd3ce894ef26a264e53ac98c79d689b653b0eda497b069e42ddfebef4"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.5.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "exclude_columns": {
                    "type": "VALUE",
                    "data": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
                "name": "sklearn.impute.SimpleImputer",
                "digest": "adc79e644eec35eb9d616be755a5de83b27f66e42b04f6508a9ceb82d99cc739"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.6.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_semantic_types": {
                    "type": "VALUE",
                    "data": true
                },
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                },
                "strategy": {
                    "type": "VALUE",
                    "data": "median"
                },
                "error_on_no_input": {
                    "type": "VALUE",
                    "data": false
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "854727ed-c82c-3137-ac59-fd52bc9ba385",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.data_preprocessing.robust_scaler.SKlearn",
                "name": "sklearn.preprocessing.data.RobustScaler",
                "digest": "eb5dbe1ea5f37a394864ca802b93228333d60a1cd8f66901ccde8e1b71f98586"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.7.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "a7100c7d-8d8e-3f2a-a0ee-b4380383ed6c",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.regression.lasso.SKlearn",
                "name": "sklearn.linear_model.coordinate_descent.Lasso",
                "digest": "6ac2b86641c908f7a932ea54244a653dab19cedbb66fcd6f596522255e3f06aa"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.8.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.4.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
                "name": "Construct pipeline predictions output",
                "digest": "e1f343aff9cb0a0dba9b69037aeefe71a5e8da2c9becd67f838130a394a7d4e6"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.9.produce"
                },
                "reference": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_transformation.denormalize.Common",
                "name": "Denormalize datasets",
                "digest": "0d5c62917bbfd451ad277226c850b58086ba45fb3a3159dcdfe47cb299ebf2dc"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset",
                "digest": "b1ac4776f0e916f707a6b6a74f3a36c56ea2eb37c6a255d986faf21855446073"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.11.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "name": "Extracts columns by semantic type",
                "digest": "f828f4fbd3ce894ef26a264e53ac98c79d689b653b0eda497b069e42ddfebef4"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.12.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "semantic_types": {
                    "type": "VALUE",
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "version": "0.6.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.Common",
                "name": "Parses strings into their types",
                "digest": "631c29b4a7853a396053e6226a230d4efe0926ccc6e73417b886ca9a62c469ef"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.12.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "name": "Extracts columns by semantic type",
                "digest": "f828f4fbd3ce894ef26a264e53ac98c79d689b653b0eda497b069e42ddfebef4"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.14.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
                "name": "sklearn.impute.SimpleImputer",
                "digest": "adc79e644eec35eb9d616be755a5de83b27f66e42b04f6508a9ceb82d99cc739"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.15.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_semantic_types": {
                    "type": "VALUE",
                    "data": true
                },
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                },
                "strategy": {
                    "type": "VALUE",
                    "data": "median"
                },
                "error_on_no_input": {
                    "type": "VALUE",
                    "data": false
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "854727ed-c82c-3137-ac59-fd52bc9ba385",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.data_preprocessing.robust_scaler.SKlearn",
                "name": "sklearn.preprocessing.data.RobustScaler",
                "digest": "eb5dbe1ea5f37a394864ca802b93228333d60a1cd8f66901ccde8e1b71f98586"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.16.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "2fb16403-8509-3f02-bdbf-9696e2fcad55",
                "version": "2019.6.7",
                "python_path": "d3m.primitives.regression.ridge.SKlearn",
                "name": "sklearn.linear_model.ridge.Ridge",
                "digest": "13c41fb2bc490548dbb04a9be8a0d4c1e5ff4885c59dc31c661d2a29b3853d29"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.17.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.13.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
                "name": "Construct pipeline predictions output",
                "digest": "e1f343aff9cb0a0dba9b69037aeefe71a5e8da2c9becd67f838130a394a7d4e6"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.18.produce"
                },
                "reference": {
                    "type": "CONTAINER",
                    "data": "steps.12.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "1cc95f70-0716-11ea-9762-3dd2bb86dde8",
                "version": "0.1",
                "python_path": "d3m.primitives.data_transformation.merge_partial_predictions.AutonBox",
                "name": "Merge predictions of multiple models",
                "digest": "763571b2f3f14a164629861306ec8cf5150a8a3daa89fcf5e2f6f1f1bb13eefd"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": [
                        "steps.19.produce",
                        "steps.10.produce"
                    ]
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        }
    ],
    "name": "Pipeline for evaluation",
    "digest": "0a7a988b6830f95a636bfee066a7e4108e5a72929bbe646289b3794ed1e0a30e",
    "pipeline_rank": "6"
}